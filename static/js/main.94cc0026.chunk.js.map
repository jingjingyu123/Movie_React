{"version":3,"sources":["Components/Home.js","Components/config.js","Components/Movies.js","Components/Messages.js","Components/Projects.js","Components/Image.js","Components/Videos.js","Components/Tab.js","Components/TabList.js","Components/Body.js","Components/Header.js","App.js","serviceWorker.js","index.js","Components/image/JJY1.jpeg"],"names":["console","log","image","Home","class","src","Component","config","apiKey","authDomain","databaseURL","firebase","require","Movies","openPopupbox","movie","content","Poster","alt","Rating","Plot","Director","onChange","e","listSelectHandler","movieID","target","value","disabled","selected","state","list","map","onClick","deletionHandler","PopupboxManager","open","titleBar","enable","text","Title","onOpen","onLightBoxOpen","onClosed","onLightBoxClosed","document","body","style","overflow","List","visible","items","loadmore","bind","searchHandler","listSubmissionHandler","changeListHandler","changeHandler","database","ref","on","snapshot","val","newState","item","push","id","setState","db","child","remove","newMovies","this","name","preventDefault","temp","set","old","apps","length","initializeApp","onSubmit","type","slice","i","key","Messages","imdbID","submissionHandler","moviesRef","temp2","axios","get","all","then","spread","responses","orderByChild","equalTo","once","exists","window","alert","thing","data","imdbRating","className","Projects","listRef","Tab","addStyling","props","tab","activeTab","backgroundColor","changeTab","title","TabList","tabs","indTab","Body","displayContent","Header","App","background-color","width","height","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.94cc0026.chunk.js","sourcesContent":["import React, { Component} from 'react';\nimport image from './image/JJY1.jpeg';\n\nconsole.log(image);\nexport class Home extends Component{\n  render(){\n    return (\n    <div class=\"Home\">\n        <div class=\"image\">\n            <img src={image}/>\n        </div>\n        <div class=\"word\">\n            <h1>About Me</h1>\n             <p>Hi, I am Jingjing Yu. I am a third-year computer science student at UCSB. I have experience with web development and android. Outside of CS, I like playing computer games and watching anime.</p>\n        </div>\n    </div>\n    );\n  }\n}\n\nexport default Home;","const config={\n    apiKey: \"AIzaSyA716GJeqXsYdKC6H1m30FxhVYM7psG33k\",\n    authDomain: \"myprofile-3a274.firebaseapp.com\",\n    databaseURL: \"https://myprofile-3a274.firebaseio.com\"\n}\nexport default config;","import React, { Component} from 'react';\nimport config from './config.js';\nimport 'react-popupbox/dist/react-popupbox.css'\nimport {\n    PopupboxManager,\n    PopupboxContainer\n  } from 'react-popupbox';\nimport SimpleReactLightbox from 'simple-react-lightbox';\nimport { SRLWrapper } from 'simple-react-lightbox';\nconst firebase = require('firebase');\n\nexport class Movies extends Component{\n  constructor() {\n    super();\n    this.state = {\n      movieID: '',\n      Title: '',\n      Poster: '',\n      Director: '',\n      Rating: '',\n      List:'',\n      visible:8,\n      items: [],\n      list:[],\n    }\n    this.loadmore=this.loadmore.bind(this);\n    this.listSelectHandler = this.listSelectHandler.bind(this);\n    this.searchHandler = this.searchHandler.bind(this);\n    this.deletionHandler = this.deletionHandler.bind(this);\n    this.listSubmissionHandler = this.listSubmissionHandler.bind(this);\n    this.changeListHandler = this.changeListHandler.bind(this);\n    this.changeHandler = this.changeHandler.bind(this);\n  }\n\n  componentDidMount() {\n    const moviesRef = firebase.database().ref('movies');\n    moviesRef.on('value', (snapshot) => {\n      let items = snapshot.val();\n      let newState = [];\n      for (let item in items) {\n        newState.push({\n          id: item,\n          movieID: items[item].movieID,\n          List:items[item].List,\n          Title: items[item].Title,\n          Poster: items[item].Poster,\n          Director: items[item].Director,\n          Rating: items[item].Rating,\n        });\n      }\n      this.setState({\n        items: newState\n      });\n    });\n\n    const listRef = firebase.database().ref('lists')\n    listRef.on('value',(snapshot) => {\n      let items = snapshot.val()\n      let db = []\n      for(let item in items){\n        db.push(items[item])\n      }\n      this.setState({\n        list:db\n      })\n    })\n  }\n\n  deletionHandler(id){\n    firebase.database().ref('movies').child(id).remove()\n  }\n\n  changeListHandler(e) {\n    let newState = e.target.value   \n    const moviesRef = firebase.database().ref('movies');\n    moviesRef.on('value', (snapshot) => {\n      let items = snapshot.val();\n      let newMovies = [];\n      for (let item in items) {\n        if(newState==\"All\" ||( items[item].List == newState)){    \n          newMovies.push({\n            id: item,\n            movieID: items[item].movieID,\n            Title: items[item].Title,\n            Poster: items[item].Poster,\n            Director: items[item].Director,\n            Rating: items[item].Rating,\n          });\n        }\n      }\n      this.setState({\n        items: newMovies\n      })\n    })\n  }\n\n  changeHandler(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  listSubmissionHandler(e) {\n    e.preventDefault();\n    const listRef = firebase.database().ref('lists')\n    listRef.push(this.state.List)\n  }\n\n\n  searchHandler(e){\n    e.preventDefault();\n    let temp = this.state.Title;\n    const moviesRef = firebase.database().ref('movies');\n    moviesRef.on('value', (snapshot) => {\n      let items = snapshot.val();\n      let newMovies = [];\n      for (let item in items) {\n        if(items[item].Title == temp){\n          newMovies.push({\n            id: item,\n            movieID: items[item].movieID,\n            Title: items[item].Title,\n            Poster: items[item].Poster,\n            Director: items[item].Director,\n            Rating: items[item].Rating,\n          });\n        }\n      }\n      this.setState({\n        items: newMovies,\n      })\n    })\n  }\n\n  listSelectHandler(id,list){\n    const moviesRef = firebase.database().ref('movies').child(id)\n    moviesRef.child(\"List\").set(list)\n  }\n  \n  //load more movies\n  loadmore(){\n    this.setState((old)=>{\n      return {visible:old.visible+8}\n    })\n  }\n\n  openPopupbox = (movie) => {\n    const content = (\n      <div>\n        <img src={movie.Poster} alt=\"new\"/>\n        <div>\n          <p><b>IMDB Rating: </b>{movie.Rating}</p>\n          <p><i>{movie.Plot} </i></p>\n          <p>Director by {movie.Director}</p>\n\n          <select onChange={e => this.listSelectHandler(movie.movieID,e.target.value)}>     \n          <option value=\"\" disabled selected>Add to list:</option>\n            {this.state.list\n                .map(list => (\n                    <option value={list}>{list}</option>\n                ))\n            }\n          </select>\n\n          <button onClick={() => {this.deletionHandler(movie.movieID)}}>Delete</button>\n        </div>\n      </div>\n    )\n      PopupboxManager.open({\n        content,\n        config: {\n          titleBar: {\n            enable: true,\n            text: movie.Title\n          },\n          onOpen: this.onLightBoxOpen,\n          onClosed: this.onLightBoxClosed\n        }\n      })\n  }\n  onLightBoxOpen = () => {\n  document.body.style.overflow = 'hidden'\n  }\n  onLightBoxClosed = () => {\n  document.body.style.overflow = 'inherit'\n  }\n\n  render(){\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config)\n  }\n    return (\n      <div>\n          <select onChange={this.changeListHandler}>\n              {this.state.list.map(item => (\n                <option value={item}>{item}</option>\n              ))}\n          </select>\n\n          <div>\n          <form onSubmit={this.searchHandler}>\n            <input onChange={this.changeHandler} value={this.state.Title} type=\"text\" name=\"Title\"/>\n            <button>Search</button>\n          </form>\n          </div>\n\n      <div class=\"Movies\">\n        {this.state.items.slice(0,this.state.visible).map((movie, i) => (\n            <img src={movie.Poster} key={movie.Title} alt=\"movie\" onClick={this.openPopupbox.bind(this, movie)}/>\n        ))}\n    </div>\n    <PopupboxContainer />\n\n    <button onClick={this.loadmore}>loadmore</button>\n    </div>\n    );\n  }\n}\n\nexport default Movies;","import React, { Component} from 'react';\nimport globalVal from './Global/globalVar';\nimport axios from 'axios'\nimport useState from 'react';\nimport config from './config.js';\nimport Movies from './Movies';\nconst firebase = require('firebase');\n\nexport class Messages extends Component{\n    constructor() {\n      super();\n      this.state = {\n        imdbID: '',\n        Director: '',\n        Title: '',\n        Poster: '',\n        Rating: '',\n        List:'All',\n        items: []\n      }\n      this.changeHandler = this.changeHandler.bind(this);\n      this.submissionHandler = this.submissionHandler.bind(this);\n      }\n\n      changeHandler(e) {\n        this.setState({\n          [e.target.name]: e.target.value\n        });\n      }\n\n      submissionHandler(e) {\n        e.preventDefault();\n        const moviesRef = firebase.database().ref('movies');\n        let temp = \"https://www.omdbapi.com/?apikey=a53d51fa&i=\" + this.state.movieID;\n        const temp2 = axios.get(temp);\n        axios.all([temp2]).then(axios.spread((...responses) => {\n            moviesRef.orderByChild(\"movieID\").equalTo(this.state.movieID).once('value', snapshot => {\n              if (snapshot.exists()) {\n                window.alert(\"Movie exists!\")\n              }\n              else {\n                const thing = {\n                  movieID: this.state.movieID,\n                  Title: responses[0].data.Title,\n                  Poster: responses[0].data.Poster,\n                  Director: responses[0].data.Director,\n                  Rating: responses[0].data.imdbRating,\n                  Plot: responses[0].data.Plot,\n                  List: this.state.List\n                }\n                console.log(thing)\n                moviesRef.child(this.state.movieID).set(thing);\n                window.alert(\"Movie added!\")\n              }\n            });\n          }\n        ));\n      }\n    \n  render(){\n    if (!firebase.apps.length) {\n        firebase.initializeApp(config)\n    }\n       return ( \n       <div className='Messages'>\n           <header>\n               <div className='wrapper'>\n                   <h1>Add a new movie!</h1>\n               </div>\n            </header>\n        <div className='container'>\n          <form onSubmit={this.submissionHandler}>\n              <b>Movie ID</b>\n            <input onChange={this.changeHandler} value={this.state.movieID} name=\"movieID\"/>\n            <button>Submit</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Messages ;\n","import React, { Component} from 'react';\nimport globalVal from './Global/globalVar';\nimport axios from 'axios'\nimport useState from 'react';\nimport config from './config.js';\nimport Movies from './Movies';\nconst firebase = require('firebase');\n\nexport class Projects extends Component{\n    constructor() {\n        super();\n        this.state = {\n          list:''\n        }\n        this.changeHandler = this.changeHandler.bind(this)\n        this.listSubmissionHandler = this.listSubmissionHandler.bind(this)\n        }\n\n        changeHandler(e) {\n            this.setState({\n              [e.target.name]: e.target.value\n            });\n          }        \n  \n        listSubmissionHandler(e) {\n          e.preventDefault();\n          const listRef = firebase.database().ref('lists');\n          window.alert(\"successful\");\n          listRef.push(this.state.list)\n        }\n   \n    render(){\n      if (!firebase.apps.length) {\n          firebase.initializeApp(config)\n      }\n         return ( \n         <div className='Messages'>\n             <header>\n                 <div className='wrapper'>\n                     <h1>Create your List!</h1>\n                 </div>\n              </header>\n          <div className='container'>\n          <form onSubmit={this.listSubmissionHandler}>\n              <label>\n                <b>List Name</b>\n              </label>\n              <input onChange={this.changeHandler} value={this.state.list} type=\"text\" name=\"list\"/>\n              <button>Submit</button>\n            </form>\n          </div>\n        </div>\n      );\n    }\n}\n\nexport default Projects;","import React, { Component} from 'react';\nimport Messages from './Messages'\nimport globalVal from './Global/globalVar';\nimport SimpleReactLightbox from 'simple-react-lightbox';\nimport { SRLWrapper } from 'simple-react-lightbox';\nimport config from './config.js';\nconst firebase = require('firebase');\n\n\n\n// var photo;\n// var data=new Array(8);\n// const axios = require('axios');\n// // data[0]=JSON.parse(JSON.stringify(globalVal.movie[1]));\n// var movie=new Array(8).fill(\"\");\n// movie[1]=JSON.parse(JSON.stringify(globalVal.movie[1]));\n// var a=\"tt3896198\";\n// let b=globalVal.movie[1];\n// var b = JSON.parse(JSON.stringify(globalVal.movie[1]));\n// var c='https://www.omdbapi.com/?i='+globalVal.movie[1].slice(0)+'&apikey=b780d44a';\n    // const axios = require('axios');\n    // axios.get(JSON.stringify(globalVal.movie)[1])\n    // .then(function (response){\n    // data=\"Title: \"+response.data.Title+\"  \"+\"Director:\"+response.data.Director+\" \"+\"Ratings: \";\n    // var temp2=\"\";\n    // for(var i=0;i<response.data.Ratings.length;i++){\n    //   temp2=temp2+response.data.Ratings[i].Source+\" \"+response.data.Ratings[i].Value+\"; \";\n    // }\n    // data=data+temp2;\n    // photo=response.data.Poster; \n    // })\n    // .catch(function (error){\n    // })\n    // .then(function(){\n    // });\n     \nexport class Image extends Component{\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     username:'',\n  //     data:'',\n  //     // bio: '',\n  //     // can_post: '',\n  //     // date: '',\n  //     // email: '',\n  //     // message: '',\n  //     ids:[]\n  //   }\n  // }\n  // componentDidMount() {\n  //   const itemsRef = firebase.database().ref('id');\n  //   itemsRef.on('value', (snapshot) => {\n  //     let ids = snapshot.val();\n  //     let newState = [];\n  //     // for(let i=0;i<ids.length;i++){\n  //     for (let id in ids) {\n  //       // movie.push(ids[id].username);\n  //       for(var i=0;i<movie.length;i++){\n  //         var temp=ids[id].username;\n  //         if(movie[i]=='https://www.omdbapi.com/?i='+movie[0]+'&apikey=b780d44a'){\n  //           break;\n  //         }\n  //         if(movie[i]==\"\"){\n  //            movie[i]='https://www.omdbapi.com/?i='+movie[0]+'&apikey=b780d44a';\n  //            break;\n  //         }\n  //       }\n  //       newState.push({\n  //         // id: item,\n  //         // title: items[item].date,\n  //         username: ids[id].username\n  //         // bio: items[item].bio,\n  //         // message: items[item].message,\n  //         // can_post: items[item].can_post\n  //       });\n  //     }\n      \n  //     this.setState({\n  //       ids: newState\n  //     });\n  //   });\n  // }\n  // render(){\n  //   if (!firebase.apps.length) {\n  //     firebase.initializeApp(config)\n  // }\n  //   return(\n  //     <div className='Messages'>\n  //      <section className='display-item'>\n  //           <div className='wrapper'>\n  //           {/* <p>{c}</p> */}\n  //           <p>{data}</p>\n  //           <ul>             \n  //             {this.state.ids.map((id) => {\n  //                 return (\n  //                   <div>\n  //                       <p>{id.username}</p>\n  //                       <p>{globalVal.movie[2]}</p>\n  //                       <p>{data}</p>\n  //                       <p>nice</p>\n  //                   </div>\n  //                       )\n  //                       })}\n  //           </ul>\n  //           </div>\n  //         </section>\n  //         </div>\n  //   )\n  // }\n}\n\nexport default Image;","import React, { Component} from 'react';\nimport YouTube from 'react-youtube';\nexport class Videos extends Component{\n  render(){\n    const opts = {\n        playerVars: {\n            //https://www.youtube.com/embed\n          autoplay: 1,\n        },\n      };\n    return (\n        <div class=\"Videos\">\n            <div class=\"Video\">\n              <iframe src=\"https://www.youtube.com/embed/il_t1WVLNxk\"></iframe>\n            </div>\n            <div class=\"Video\">\n              <iframe src=\"https://www.youtube.com/embed/il_t1WVLNxk?autoplay=1\"></iframe>\n            </div>\n            <div class=\"Video\">\n              <iframe src=\"https://www.youtube.com/embed/il_t1WVLNxk/AS_dAPN1Dlk?playlist=AfxHGNRtFac&loop=1\"> </iframe>\n            </div>\n            <div class=\"Video\">\n              <iframe src=\"https://www.youtube.com/embed/il_t1WVLNxk/?controls=0\"> </iframe> \n            </div>\n        </div>);\n  }\n}\n\nexport default Videos;","import React, { Component} from 'react';\n\nexport class Tab extends Component{\n    addStyling = () =>{\n        if(this.props.tab.id==this.props.activeTab){\n            return {backgroundColor:'pink'}\n        }\n    }\n\n    addHover() {\n        this.setState({backgroundColor:'brown'})\n      }\n\n\n\n  render(){\n    return (\n        <div className='tab' \n        style={this.addStyling()}\n        onClick={this.props.changeTab.bind(this,this.props.tab.id)}\n        >\n            <h2 >{this.props.tab.title}</h2>\n        </div>\n    );\n  }\n}\n\nexport default Tab;","import React, { Component} from 'react';\nimport Tab from './Tab'\nexport class TabList extends Component{\n  render(){\n    return this.props.tabs.map((indTab)=>(\n        <Tab tab={indTab} \n        \n        changeTab={this.props.changeTab} \n        activeTab={this.props.activeTab}\n        />\n    ));\n  }\n}\n\nexport default TabList;","import React, { Component} from 'react';\nimport Home from './Home'\nimport Image from './Image'\nimport Videos from './Videos'\nimport Projects from './Projects'\nimport Messages from './Messages'\nimport Movies from './Movies'\nimport TabList from './TabList';\n\nexport class Body extends Component{\n    displayContent=()=>{\n        var activeTab=this.props.activeTab\n        if(activeTab==1){\n            return <Home/>\n        }\n        else if(activeTab==2){\n            return <Projects/>\n        }\n        else if(activeTab==3){\n            return <Messages/>\n        }\n        else if(activeTab==4){\n            return  <Movies/>\n        }\n    }\n  render(){\n    return (this.displayContent());\n  }\n}\n\nexport default Body;","import React, { Component} from 'react';\nexport class Header extends Component{\n  render(){\n    return (\n      <div>\n          <h1>Welcome to my Website</h1>\n      </div>\n    );\n  }\n}\n\nexport default Header;","import React, { Component} from 'react';\nimport './App.css'\nimport Body from './Components/Body';\nimport Header from './Components/Header';\nimport Tablist from './Components/TabList';\nimport ScrollUpButton from \"react-scroll-up-button\";\n \n\nexport class App extends Component{\n\n  constructor(){\n    super();\n    this.state = {\n      activeTab: 1\n    }\n    this.changeTab = (id)=>{\n      this.setState({\n        activeTab: id\n      })\n      if(id == 1) document.title='Home';\n      else if(id==2) document.title='Create Lists';\n      else if(id==3) document.title='Add Movies';\n      else document.title='Movies';\n    }\n    document.title='Home';\n  }\n  render(){\n    const tabs=[\n      {\n      id:1,\n      title:'Home'\n      },\n      {\n        id:2,\n        title:'Create Lists'\n      },\n      {\n        id:3,\n        title:'Add Movies'\n      },\n      {\n        id:4,\n        title:'Movies'\n      }\n    ]\n    return (\n      <div background-color=\"blanchedalmond\" width=\"100vh\" height=\"100vh\" className=\"body\">\n        <div className=\"header\">\n          <Header/>\n        </div>\n        <div className=\"nav-bar\">\n            <Tablist tabs={tabs} \n            changeTab={this.changeTab}\n            activeTab={this.state.activeTab}/>\n        </div>\n        <div className=\"main-body\">\n          <ScrollUpButton/>\n            <Body background-color=\"blanchedalmond\" activeTab={this.state.activeTab}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/JJY1.6b1589e9.jpeg\";"],"sourceRoot":""}